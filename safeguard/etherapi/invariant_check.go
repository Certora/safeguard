package etherapi

import (
	"log/slog"
	"math/big"

	"github.com/ethereum/go-ethereum/core/state"
	"github.com/ethereum/go-ethereum/core/types"
)

/*
Interface detector plugins are expected to implement. See the README.md in this folder.
*/
type InvariantChecker interface {
	/**
	* Called on each block received from the beacon chain.

	  statedb is the state *after* the block's transactions are applied and should **not** be mutated by the plugin.
	  bc is the interface the plugin can use to access internals of the core EVM.
	  blockNumber is the number of the block currently being processed (and for which the invariant check is being run)

	  mr is a MockRunner which allows simulating calls into contracts.

	  allLogs are the logs that were generated by executing the block.
	*/
	InvariantChecks(
		statedb *state.StateDB,
		bc BlockScanner,
		blockNumber big.Int,
		mr *MockRunner,
		allLogs []*types.Log,
	) error

	/*
	   Called when a plugin is paused by the administrative interfaces. Plugins should discard their global state
	   when this occurs.
	*/
	OnPause()

	/*
	  Called when a plugin is about to be disposed (FIXME: it's not actually called)
	*/
	OnDispose()

	/*
	  Request the logger (if any) in this plugin set the minimum log level to l
	*/
	SetLogLevel(l slog.Level)
}
