name: Build Docker image

on:
  push:
    branches:
      - safeguard
  pull_request:
    branches:
      - safeguard
  workflow_dispatch:

jobs:
  build-and-push:
    runs-on: Linux-ARM64
    if: ${{ github.ref == 'refs/heads/safeguard' }}
    permissions:
      id-token: write
      contents: read
    steps:
      # Checkout the repository
      - name: Checkout code
        uses: actions/checkout@v4

      # Login to AWS
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.ARTIFACTS_OIDC_ROLE }}
          aws-region: ${{ secrets.ARTIFACTS_DEFAULT_REGION }}

      # Login to AWS Artifacts ECR
      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      # Build images and push it
      - name: Build, tag, and push docker image to Amazon ECR
        env:
          REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          GETH_REPOSITORY: eth-monitoring
          DASHBOARD_REPOSITORY: eth-dashboard
          GITHUB_SHA: ${{ github.sha }}
          PLUGIN_NAME: aavev3
        run: |
          # build geth image
          docker build --build-arg PLUGIN_NAME=$PLUGIN_NAME --target geth --platform linux/arm64 -t $REGISTRY/$GETH_REPOSITORY:$PLUGIN_NAME-${GITHUB_SHA::7} --push .
          
          # build dashboard image
          docker build --target dashboard --platform linux/arm64 -t $REGISTRY/$GETH_REPOSITORY:$PLUGIN_NAME-dashboard --push .
          # TODO: create dashboard repository and change dashboard image tag

  build-test:
    runs-on: Linux-ARM64
    if: ${{ github.ref != 'refs/heads/safeguard' }}
    steps:
      # Checkout the repository
      - name: Checkout code
        uses: actions/checkout@v4

      # Build the Docker
      - name: Build geth and dashboard images
        env:
          AAVE_PLUGIN: aavev3
        run: |
          docker build --build-arg PLUGIN_NAME=$AAVE_PLUGIN --target geth --platform linux/arm64 -t geth:test .
          docker build --target dashboard --platform linux/arm64 -t dashboard:test .
